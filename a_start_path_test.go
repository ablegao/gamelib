package gamelib

import (
	//	"fmt"
	//"container/list"
	"testing"
)

func TestAStart(t *testing.T) {
	mapdata
	//t.Log(MapPointToArray(mapdata))
	mmmap := MapPointToArray(mapdata)
	api := NewAStartPathFinder(mmmap, 3000, 700, 64, 32)

	for k, v := range mmmap {
		t.Logf("%2d  %d ", k, v)
	}

	t.Log("x%d y%d : %d", 8, 32, mmmap[32][8])
	t.Log("test =   =============== ")
	/*
		if aaa := api.Find(&Point{1, 1}, &Point{4, 4}); aaa != nil {
			//t.Log(aaa)
			for _, p := range aaa {
				t.Logf("%d : %d", p.X, p.Y)
			}
		}*/
	t.Log("test =   =============== ")

	if aaa := api.Find(&Point{9, 32}, &Point{12, 31}); aaa != nil {
		//t.Log(aaa)
		for _, p := range aaa {
			t.Logf("%d : %d", p.X, p.Y)
		}
	}

	//t.Log(api)
	//a := []int{1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8}
	//t.Log(a[12])

	/*
		for {
			if xx := ll.Front(); xx != nil {
				t.Log(xx.Value)
				ll.Remove(xx)
			} else {
				break
			}
		}*/
	//for xx := ll.Front()
	//	t.Log(xx)

	//t.Log(ll.Front().Value)

	//t.Log(ll.Front().Value)

	/*
		ystr := "<table>"
		for yi := 0; yi < len(api.mapData); yi++ {
			ystr += "<tr>"
			for xi := 0; xi < len(api.mapData[yi]); xi++ {
				//n := &api.mapData[yi][xi]

				ystr += fmt.Sprintf(" <TD>%d : %d </td>", yi, xi)
			}
			ystr += "</tr>"
		}
		ystr += "</table>"
		t.Log(ystr)
	*/
}
